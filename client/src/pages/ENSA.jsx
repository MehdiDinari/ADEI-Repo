import React, { useState, useContext, useEffect } from 'react';
import { AuthContext } from '../AuthContext';

const ENSA = () => {
  const { token } = useContext(AuthContext);
  const [isEditing, setIsEditing] = useState(false);
  const [pageReady, setPageReady] = useState(false);
  const [isDropdownOpen, setIsDropdownOpen] = useState(false);
  const [content, setContent] = useState({
    title: "√âcole Nationale des Sciences Appliqu√©es de F√®s",
    subtitle: "Excellence acad√©mique et innovation technologique au c≈ìur du Maroc",
    sections: [
      {
        title: "Pr√©sentation de l'ENSAF",
        content: "L'√âcole Nationale des Sciences Appliqu√©es de F√®s (ENSAF) est un √©tablissement d'enseignement sup√©rieur public marocain, cr√©√© en 1999. Elle fait partie du r√©seau des √âcoles Nationales des Sciences Appliqu√©es (ENSA) du Royaume du Maroc et rel√®ve de l'Universit√© Sidi Mohamed Ben Abdellah."
      },
      {
        title: "Formation et Fili√®res",
        content: "L'ENSAF propose des formations d'ing√©nieur dans plusieurs sp√©cialit√©s : G√©nie Informatique, G√©nie des T√©l√©communications et R√©seaux, G√©nie √âlectrique et Syst√®mes Embarqu√©s, G√©nie Industriel, G√©nie M√©canique et Syst√®mes Automatis√©s, et G√©nie des Mat√©riaux et Proc√©d√©s. Les formations allient th√©orie et pratique avec des stages en entreprise et des projets de fin d'√©tudes."
      },
      {
        title: "Recherche et Innovation",
        content: "L'√©cole d√©veloppe une recherche de qualit√© √† travers ses laboratoires et √©quipes de recherche. Elle entretient des partenariats avec des universit√©s internationales et des entreprises industrielles, favorisant l'innovation et le transfert de technologie."
      },
      {
        title: "Vie √âtudiante",
        content: "L'ENSAF offre un environnement d'apprentissage stimulant avec des infrastructures modernes, des laboratoires √©quip√©s, une biblioth√®que riche, et de nombreuses activit√©s parascolaires. Les √©tudiants b√©n√©ficient d'un encadrement p√©dagogique de qualit√© et d'un accompagnement vers l'insertion professionnelle."
      }
    ]
  });

  const filieres = [
    { name: 'Ing√©nierie des Syst√®mes Communicants et S√©curit√© Informatique (ISCSI)', link: 'https://docs.ensaf.ac.ma/home/fil/ISCSN.pdf' },
    { name: 'Ing√©nierie Informatique, Intelligence Artificielle et Confiance Num√©rique (3IACN)', link: 'https://docs.ensaf.ac.ma/home/fil/3IACN.pdf' },
    { name: 'Ing√©nierie des Syst√®mes Embarqu√©s et Intelligence Artificielle (ISEIA)', link: 'https://docs.ensaf.ac.ma/home/fil/ISEIA.pdf' },
    { name: 'Ing√©nierie Logicielle et Intelligence Artificielle (ILIA)', link: 'https://docs.ensaf.ac.ma/home/fil/ILIAV2.pdf' },
    { name: 'G√©nie du d√©veloppement num√©rique et Cybers√©curit√© (GDNC)', link: 'https://docs.ensaf.ac.ma/home/fil/DNC.pdf' },
    { name: 'Ing√©nierie en Science de Donn√©es et Intelligence Artificielle (ISDIA)', link: 'https://docs.ensaf.ac.ma/home/fil/ISDIAV3.pdf' },
    { name: 'G√©nie Informatique', link: 'https://docs.ensaf.ac.ma/home/fil/INFO.pdf' },
    { name: 'G√©nie M√©canique', link: 'https://docs.ensaf.ac.ma/home/fil/GM.pdf' },
    { name: 'G√©nie Energ√©tique et syst√®mes intelligents (GESI)', link: 'https://docs.ensaf.ac.ma/home/fil/GESI.pdf' },
    { name: 'G√©nie M√©catronique', link: 'https://docs.ensaf.ac.ma/home/fil/GMT.pdf' },
    { name: 'G√©nie Industriel', link: 'https://docs.ensaf.ac.ma/home/fil/gind.pdf' }
  ];

  const isAdmin = token === 'admin' || (token && token.length > 0);

  useEffect(() => {
    const timer = setTimeout(() => setPageReady(true), 200);
    return () => clearTimeout(timer);
  }, []);

  useEffect(() => {
    const handleClickOutside = (event) => {
      if (!event.target.closest('.floating-button-container')) {
        setIsDropdownOpen(false);
      }
    };
    document.addEventListener('click', handleClickOutside);
    return () => document.removeEventListener('click', handleClickOutside);
  }, []);

  const handleSave = () => {
    setIsEditing(false);
  };

  const updateSection = (index, field, value) => {
    const newSections = [...content.sections];
    newSections[index] = { ...newSections[index], [field]: value };
    setContent({ ...content, sections: newSections });
  };

  const addSection = () => {
    setContent({
      ...content,
      sections: [...content.sections, { title: "Nouvelle section", content: "" }]
    });
  };

  const removeSection = (index) => {
    if (window.confirm('√ätes-vous s√ªr de vouloir supprimer cette section ?')) {
      const newSections = content.sections.filter((_, i) => i !== index);
      setContent({ ...content, sections: newSections });
    }
  };

  return (
    <div className={`page-container ${pageReady ? 'fade-in' : ''}`}>
      <>
        <div
          className="hero"
          style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/images/hero-about.png)` }}
        >
          <div className={`hero-content ${pageReady ? 'slide-up' : ''}`}>
            {isEditing ? (
              <>
                <input
                  type="text"
                  value={content.title}
                  onChange={(e) => setContent({ ...content, title: e.target.value })}
                  style={{
                    background: 'rgba(0,0,0,0.5)',
                    border: '2px solid var(--primary)',
                    color: 'white',
                    fontSize: 'var(--font-size-4xl)',
                    fontWeight: 'bold',
                    textAlign: 'center',
                    padding: 'var(--spacing-md)',
                    borderRadius: 'var(--radius-lg)',
                    marginBottom: 'var(--spacing-md)',
                    width: '100%'
                  }}
                />
                <textarea
                  value={content.subtitle}
                  onChange={(e) => setContent({ ...content, subtitle: e.target.value })}
                  style={{
                    background: 'rgba(0,0,0,0.5)',
                    border: '2px solid var(--primary)',
                    color: 'white',
                    fontSize: 'var(--font-size-lg)',
                    textAlign: 'center',
                    padding: 'var(--spacing-md)',
                    borderRadius: 'var(--radius-lg)',
                    resize: 'vertical',
                    minHeight: '60px',
                    width: '100%'
                  }}
                />
              </>
            ) : (
              <>
                <h1>{content.title}</h1>
                <p>{content.subtitle}</p>
              </>
            )}
          </div>
        </div>

        <div className={`content ${pageReady ? 'fade-in' : ''}`} style={{ animationDelay: '0.2s' }}>
          {isAdmin && (
            <div className={`${pageReady ? 'zoom-in' : ''}`} style={{ marginBottom: 'var(--spacing-xl)', textAlign: 'center', animationDelay: '0.3s' }}>
              {isEditing ? (
                <div style={{ 
                  display: 'flex', 
                  gap: 'var(--spacing-md)', 
                  justifyContent: 'center',
                  flexWrap: 'wrap'
                }}>
                  <button onClick={handleSave} className="btn success">
                    Sauvegarder
                  </button>
                  <button onClick={() => setIsEditing(false)} className="btn secondary">
                    Annuler
                  </button>
                  <button onClick={addSection} className="btn">
                    Ajouter une section
                  </button>
                </div>
              ) : (
                <button onClick={() => setIsEditing(true)} className="btn">
                  Modifier la page
                </button>
              )}
            </div>
          )}

          <div className="card-grid">
            {content.sections.map((section, index) => (
              <div key={index} className={`card ${pageReady ? 'slide-up' : ''}`} style={{ animationDelay: pageReady ? `${0.4 + index * 0.1}s` : '0s' }}>
                {isEditing ? (
                  <>
                    <input
                      type="text"
                      value={section.title}
                      onChange={(e) => updateSection(index, 'title', e.target.value)}
                      className="form-input"
                      style={{ 
                        marginBottom: 'var(--spacing-md)', 
                        fontWeight: 'bold', 
                        fontSize: 'var(--font-size-xl)' 
                      }}
                    />
                    <textarea
                      value={section.content}
                      onChange={(e) => updateSection(index, 'content', e.target.value)}
                      className="form-input"
                      rows="6"
                      style={{ marginBottom: 'var(--spacing-md)' }}
                    />
                    <button
                      onClick={() => removeSection(index)}
                      className="btn-icon danger"
                      title="Supprimer cette section"
                    >
                      üóëÔ∏è
                    </button>
                  </>
                ) : (
                  <>
                    <h2 className="text-primary mt-0">{section.title}</h2>
                    <p>{section.content}</p>
                  </>
                )}
              </div>
            ))}
          </div>

          {!isEditing && (
            <div className={`card text-center highlight-card ${pageReady ? 'zoom-in' : ''}`} style={{ 
              marginTop: 'var(--spacing-3xl)',
              animationDelay: '0.6s'
            }}>
              <h2 className="text-primary">Rejoignez l'ENSAF !</h2>
              <p style={{ fontSize: 'var(--font-size-lg)', marginBottom: 'var(--spacing-xl)' }}>
                D√©couvrez nos formations d'excellence et int√©grez une communaut√© d'ing√©nieurs 
                passionn√©s par l'innovation et la technologie.
              </p>
              <div style={{ 
                display: 'flex', 
                gap: 'var(--spacing-md)', 
                justifyContent: 'center', 
                flexWrap: 'wrap' 
              }}>
                <a href="/clubs" className="btn">
                  D√©couvrir les clubs
                </a>
                <a href="/events" className="btn secondary">
                  Voir les √©v√©nements
                </a>
                <a href="/contact" className="btn secondary">
                  Nous contacter
                </a>
              </div>
            </div>
          )}
        </div>
      </>

      {/* Floating Button */}
      <div className="floating-button-container">
        <button
          className={`floating-button ${isDropdownOpen ? 'active' : ''}`}
          onClick={() => setIsDropdownOpen(!isDropdownOpen)}
          title="Voir les fili√®res"
        >
          üìö
        </button>
        
        {isDropdownOpen && (
          <div className="floating-dropdown">
            <div className="floating-dropdown-header">
              <h4>Fili√®res ENSA</h4>
            </div>
            <div className="floating-dropdown-content">
              {filieres.map((filiere, index) => (
                <a
                  key={index}
                  href={filiere.link}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="floating-dropdown-item"
                >
                  üìÑ {filiere.name}
                </a>
              ))}
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default ENSA;